% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mleete.R
\name{mleete}
\alias{mleete}
\title{mleete}
\usage{
mleete(
  data,
  resp,
  event = NULL,
  trt,
  stratcov = NULL,
  basecov.cont = NULL,
  basecov.cat = NULL,
  pi = NULL,
  bounds = c(-Inf, Inf),
  method = "log.HR",
  ...,
  SL.method = "SL.lm",
  sample.splitting = FALSE,
  n.folds.cf = 5
)
}
\arguments{
\item{data}{input dataset (a data frame)}

\item{resp}{name of response variable (observed event time for a survival outcome)}

\item{event}{observed event type (1 failure; 0 censoring) for a survival outcome}

\item{trt}{treatment indicator (numerical or character, with higher value representing experimental treatment)}

\item{stratcov}{name(s) of stratification variables for a stratified analysis}

\item{basecov.cont}{name(s) of continuous baseline covariates to adjust for}

\item{basecov.cat}{name(s) of categorical baseline covariates to adjust for}

\item{pi}{known probability of receiving treatment 1 (as opposed to 0)}

\item{bounds}{lower and upper bounds for the treatment effect of interest}

\item{method}{choice of initial estimator (log.HR, surv.diff, rmst.diff or WMW.cens for a survival outcome)}

\item{...}{optional arguments required by the chosen method (e.g., tau for surv.diff and rmst.diff)}

\item{SL.method}{name of SuperLearner wrapper function for the (single) algorithm to be used}

\item{sample.splitting}{logical indicator for the use of sample splitting}

\item{n.folds.cf}{number of folds to use in cross-fitting (i.e., sample splitting)}
}
\value{
a 2-by-2 matrix consisting of the unadjusted and augmented estimates and their standard errors
}
\description{
{ Machine learning for efficient estimation of treatment effects using a single algorithm}
}
\examples{
library(sleete)
data <- subset(colon, subset = ((etype == 2)&(rx != "Lev")))
data$trt <- as.numeric(data$rx == "Lev+5FU")
pi  <- 0.5
tau <- 5*365

set.seed(12345)
fit.mleete <- mleete(data, resp = "time", event = "status", trt = "trt",
                     basecov.cont = c("age", "nodes", "differ", "extent"),
                     basecov.cat = c("sex", "obstruct", "perfor", "adhere", "surg", "node4"),
                     pi = pi, method = "log.HR")
round(fit.mleete, digits = 3)

}
